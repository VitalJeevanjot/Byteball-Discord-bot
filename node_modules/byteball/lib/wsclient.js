'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var WebSocket = void 0;
if (typeof window !== 'undefined') {
  var _window = window;
  WebSocket = _window.WebSocket;
} else {
  WebSocket = require('ws'); // eslint-disable-line global-require
}

var wait = function wait(ws, cb) {
  setTimeout(function () {
    if (ws.readyState === 1) {
      if (cb !== null) cb();
    } else {
      wait(ws, cb);
    }
  }, 5);
};

var WSClient = function () {
  function WSClient(address) {
    var _this = this;

    (0, _classCallCheck3.default)(this, WSClient);

    this.address = address;
    this.open = false;
    this.queue = {};
    this.notifications = function () {};

    this.ws = new WebSocket(address);

    this.ws.addEventListener('message', function (data) {
      var message = JSON.parse(data.data);
      if (_this.queue[message[1].tag]) {
        var error = message[1].response ? message[1].response.error || null : null;
        var result = error ? null : message[1].response || null;
        _this.queue[message[1].tag](error, result);
      } else {
        _this.notifications(null, message);
      }
    });

    this.ws.addEventListener('open', function () {
      _this.open = true;
    });

    this.ws.addEventListener('close', function () {
      _this.open = false;
    });
  }

  (0, _createClass3.default)(WSClient, [{
    key: 'subscribe',
    value: function subscribe(cb) {
      this.notifications = cb;
    }
  }, {
    key: 'send',
    value: function send(message) {
      var _this2 = this;

      wait(this.ws, function () {
        _this2.ws.send((0, _stringify2.default)(message));
      });
    }
  }, {
    key: 'close',
    value: function close() {
      this.ws.close();
    }
  }, {
    key: 'request',
    value: function request(command, params, cb) {
      var request = { command: command };
      if (params) request.params = params;
      request.tag = Math.random().toString(36).substring(7);
      this.queue[request.tag] = cb;
      this.send(['request', request]);
    }
  }, {
    key: 'justsaying',
    value: function justsaying(subject, body) {
      var justsaying = { subject: subject };
      if (body) justsaying.body = body;
      this.send(['justsaying', justsaying]);
    }
  }]);
  return WSClient;
}();

exports.default = WSClient;
module.exports = exports['default'];