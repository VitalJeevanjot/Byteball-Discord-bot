'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _wif = require('wif');

var _wif2 = _interopRequireDefault(_wif);

var _internal = require('./internal');

var _wsclient = require('./wsclient');

var _wsclient2 = _interopRequireDefault(_wsclient);

var _constants = require('./constants');

var _api = require('./api.json');

var _api2 = _interopRequireDefault(_api);

var _apps = require('./apps.json');

var _apps2 = _interopRequireDefault(_apps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Client = function () {
  function Client() {
    var _this = this;

    var nodeAddress = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _constants.DEFAULT_NODE;
    var testnet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    (0, _classCallCheck3.default)(this, Client);

    var self = this;

    this.testnet = testnet;
    this.client = new _wsclient2.default(nodeAddress);
    this.cachedWitnesses = null;

    var requestAsync = function requestAsync(name, params) {
      return new _promise2.default(function (resolve, reject) {
        _this.client.request(name, params, function (err, result) {
          if (err) return reject(err);
          return resolve(result);
        });
      });
    };

    this.api = {};

    this.compose = {
      message: function () {
        var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(app, payload, wif) {
          var privKeyBuf, pubkey, definition, address, witnesses, _ref2, _ref3, lightProps, history, bytePayment, customMessages, assetPayment, requireDefinition, unit, author, assocSigningPaths, assocLengthsBySigningPaths, arrSigningPaths, j, headersCommission, payloadCommission, textToSign, signature;

          return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  privKeyBuf = _wif2.default.decode(wif, self.testnet ? 239 : 128).privateKey;
                  pubkey = (0, _internal.toPublicKey)(privKeyBuf);
                  definition = ['sig', { pubkey: pubkey }];
                  address = (0, _internal.getChash160)(definition);
                  _context.next = 6;
                  return self.getCachedWitnesses();

                case 6:
                  witnesses = _context.sent;
                  _context.next = 9;
                  return _promise2.default.all([self.api.getParentsAndLastBallAndWitnessListUnit({ witnesses: witnesses }), self.api.getHistory({ witnesses: witnesses, addresses: [address] })]);

                case 9:
                  _ref2 = _context.sent;
                  _ref3 = (0, _slicedToArray3.default)(_ref2, 2);
                  lightProps = _ref3[0];
                  history = _ref3[1];
                  _context.next = 15;
                  return (0, _internal.createPaymentMessage)(self, null, app !== 'payment' || payload.asset ? [] : payload.outputs, address);

                case 15:
                  bytePayment = _context.sent;
                  customMessages = [bytePayment];

                  if (!(app === 'payment')) {
                    _context.next = 25;
                    break;
                  }

                  if (!payload.asset) {
                    _context.next = 23;
                    break;
                  }

                  _context.next = 21;
                  return (0, _internal.createPaymentMessage)(self, payload.asset, payload.outputs, address);

                case 21:
                  assetPayment = _context.sent;

                  customMessages.push(assetPayment);

                case 23:
                  _context.next = 26;
                  break;

                case 25:
                  customMessages.push({
                    app: app,
                    payload_hash: (0, _internal.getBase64Hash)(payload),
                    payload_location: 'inline',
                    payload: payload
                  });

                case 26:
                  requireDefinition = (0, _internal.requiresDefinition)(address, history);
                  unit = {
                    version: self.testnet ? _constants.VERSION_TESTNET : _constants.VERSION,
                    alt: self.testnet ? _constants.ALT_TESTNET : _constants.ALT,
                    messages: [].concat(customMessages),
                    authors: [],
                    parent_units: lightProps.parent_units,
                    last_ball: lightProps.last_stable_mc_ball,
                    last_ball_unit: lightProps.last_stable_mc_ball_unit,
                    witness_list_unit: lightProps.witness_list_unit
                  };
                  author = { address: address, authentifiers: {} };

                  if (requireDefinition) {
                    author.definition = definition;
                  }

                  assocSigningPaths = {};
                  assocLengthsBySigningPaths = { r: 88 };
                  arrSigningPaths = (0, _keys2.default)(assocLengthsBySigningPaths);

                  assocSigningPaths[address] = arrSigningPaths;
                  for (j = 0; j < arrSigningPaths.length; j += 1) {
                    author.authentifiers[arrSigningPaths[j]] = (0, _internal.repeatString)('-', assocLengthsBySigningPaths[arrSigningPaths[j]]);
                  }
                  unit.authors.push(author);

                  headersCommission = (0, _internal.getHeadersSize)(unit);
                  payloadCommission = (0, _internal.getTotalPayloadSize)(unit);


                  customMessages[0].payload.outputs[0].amount -= headersCommission + payloadCommission;
                  customMessages[0].payload.outputs.sort(_internal.sortOutputs);
                  customMessages[0].payload_hash = (0, _internal.getBase64Hash)(customMessages[0].payload);

                  if (payload.asset) {
                    customMessages[1].payload.outputs.sort(_internal.sortOutputs);
                    customMessages[1].payload_hash = (0, _internal.getBase64Hash)(customMessages[1].payload);
                  }

                  unit.headers_commission = headersCommission;
                  unit.payload_commission = payloadCommission;

                  textToSign = (0, _internal.getUnitHashToSign)(unit);
                  signature = (0, _internal.sign)(textToSign, privKeyBuf);

                  unit.authors[0].authentifiers = { r: signature };

                  unit.messages = [].concat(customMessages);
                  unit.unit = (0, _internal.getUnitHash)(unit);

                  return _context.abrupt('return', unit);

                case 50:
                case 'end':
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        function message(_x3, _x4, _x5) {
          return _ref.apply(this, arguments);
        }

        return message;
      }()
    };

    this.post = {
      message: function () {
        var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(app, payload, wif) {
          var unit;
          return _regenerator2.default.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return self.compose.message(app, payload, wif);

                case 2:
                  unit = _context2.sent;
                  return _context2.abrupt('return', self.broadcast(unit));

                case 4:
                case 'end':
                  return _context2.stop();
              }
            }
          }, _callee2, this);
        }));

        function message(_x6, _x7, _x8) {
          return _ref4.apply(this, arguments);
        }

        return message;
      }()
    };

    (0, _assign2.default)(this.api, (0, _internal.mapAPI)(_api2.default, requestAsync));
    (0, _assign2.default)(this.compose, (0, _internal.mapAPI)(_apps2.default, this.compose.message));
    (0, _assign2.default)(this.post, (0, _internal.mapAPI)(_apps2.default, this.post.message));
  }

  (0, _createClass3.default)(Client, [{
    key: 'broadcast',
    value: function () {
      var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(unit) {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.api.postJoint({ unit: unit });

              case 2:
                return _context3.abrupt('return', unit.unit);

              case 3:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function broadcast(_x9) {
        return _ref5.apply(this, arguments);
      }

      return broadcast;
    }()
  }, {
    key: 'getCachedWitnesses',
    value: function () {
      var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4() {
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!this.cachedWitnesses) {
                  _context4.next = 2;
                  break;
                }

                return _context4.abrupt('return', this.cachedWitnesses);

              case 2:
                _context4.next = 4;
                return this.api.getWitnesses();

              case 4:
                this.cachedWitnesses = _context4.sent;
                return _context4.abrupt('return', this.cachedWitnesses);

              case 6:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function getCachedWitnesses() {
        return _ref6.apply(this, arguments);
      }

      return getCachedWitnesses;
    }()
  }, {
    key: 'subscribe',
    value: function subscribe(cb) {
      this.client.subscribe(cb);
    }
  }, {
    key: 'justsaying',
    value: function justsaying(subject, body) {
      this.client.justsaying(subject, body);
    }
  }, {
    key: 'close',
    value: function close() {
      this.client.close();
    }
  }]);
  return Client;
}();

exports.default = Client;
module.exports = exports['default'];